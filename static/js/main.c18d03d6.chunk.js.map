{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","setInterval","setState","console","log","toLocaleTimeString","prevProps","name","props","clearInterval","React","Component","App","isClockVisible","clockName","className","type","onClick","Math","random","ReactDOM","render","document","getElementById"],"mappings":"sNAMaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,KACVC,QAAS,GAHb,uDAME,WAAqB,IAAD,OACdC,KAAKJ,MAAMG,QAAU,IAIzBC,KAAKJ,MAAMG,QAAWE,aAAsC,WAC1D,EAAKC,SAAS,CAAEL,KAAM,IAAIC,OAE1BK,QAAQC,IAAI,EAAKR,MAAMC,KAAKQ,wBAC3B,QAfP,gCAkBE,SAAmBC,GACjB,IAAQC,EAASP,KAAKQ,MAAdD,KAEJD,EAAUC,OAASA,GAKvBJ,QAAQC,IAAR,qCAA0CE,EAAUC,KAApD,eAA+DA,MA1BnE,kCA6BE,WACEE,cAAcT,KAAKJ,MAAMG,WA9B7B,oBAiCE,WACE,IAAQF,EAASG,KAAKJ,MAAdC,KAER,OACE,8CAEG,IACAA,EAAKQ,4BAxCd,GAA2BK,IAAMC,WCFZC,E,4MACnBhB,MAAQ,CACNiB,gBAAgB,EAChBC,UAAW,G,4CAGb,WAAU,IAAD,OACP,EAAsCd,KAAKJ,MAAnCiB,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,UAExB,OACE,qCACE,sBAAKC,UAAU,MAAf,UACE,6CACCF,GACC,cAAC,EAAD,CAAON,KAAMO,OAIjB,wBACEE,KAAK,SACLC,QAAS,kBAAM,EAAKf,SAAS,CAAEW,gBAAgB,KAFjD,wBAOA,wBACEG,KAAK,SACLC,QAAS,kBAAM,EAAKf,SAAS,CAAEW,gBAAgB,KAFjD,wBAOA,wBACEG,KAAK,SACLC,QAAS,kBAAM,EAAKf,SAAS,CAAEY,UAAWI,KAAKC,YAFjD,oC,GAhCyBT,IAAMC,WCDvCS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c18d03d6.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  name: number;\n}\n\nexport class Clock extends React.Component<Props> {\n  state = {\n    date: new Date(),\n    timerId: 0,\n  };\n\n  componentDidMount() {\n    if (this.state.timerId > 0) {\n      return;\n    }\n\n    this.state.timerId = (setInterval as Window['setInterval'])(() => {\n      this.setState({ date: new Date() });\n      // eslint-disable-next-line no-console\n      console.log(this.state.date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { name } = this.props;\n\n    if (prevProps.name === name) {\n      return;\n    }\n\n    // eslint-disable-next-line no-console\n    console.log(`The Clock was renamed from ${prevProps.name} to ${name}`);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.timerId);\n  }\n\n  render() {\n    const { date } = this.state;\n\n    return (\n      <p>\n        Current time:\n        {' '}\n        {date.toLocaleTimeString()}\n      </p>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nexport default class App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: 0,\n  };\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <>\n        <div className=\"App\">\n          <h1>React clock</h1>\n          {isClockVisible && (\n            <Clock name={clockName} />\n          )}\n        </div>\n\n        <button\n          type=\"button\"\n          onClick={() => this.setState({ isClockVisible: true })}\n        >\n          Show Clock\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => this.setState({ isClockVisible: false })}\n        >\n          Hide Clock\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => this.setState({ clockName: Math.random() })}\n        >\n          Set random name\n        </button>\n      </>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}